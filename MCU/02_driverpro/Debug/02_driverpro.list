
02_driverpro.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000fc  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000294  0800029c  0001029c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000294  08000294  0001029c  2**0
                  CONTENTS
  4 .ARM          00000000  08000294  08000294  0001029c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000294  0800029c  0001029c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000294  08000294  00010294  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000298  08000298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001029c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800029c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800029c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001029c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000a8  00000000  00000000  000102cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000005b  00000000  00000000  00010374  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  000103d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00010418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f34  00000000  00000000  00010448  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000422  00000000  00000000  0001137c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003ae4  00000000  00000000  0001179e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00015282  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  000152d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800027c 	.word	0x0800027c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	0800027c 	.word	0x0800027c

080001d8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 80001dc:	e7fe      	b.n	80001dc <main+0x4>
	...

080001e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001e0:	480d      	ldr	r0, [pc, #52]	; (8000218 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001e8:	480c      	ldr	r0, [pc, #48]	; (800021c <LoopForever+0x6>)
  ldr r1, =_edata
 80001ea:	490d      	ldr	r1, [pc, #52]	; (8000220 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001ec:	4a0d      	ldr	r2, [pc, #52]	; (8000224 <LoopForever+0xe>)
  movs r3, #0
 80001ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001f0:	e002      	b.n	80001f8 <LoopCopyDataInit>

080001f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001f6:	3304      	adds	r3, #4

080001f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001fc:	d3f9      	bcc.n	80001f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001fe:	4a0a      	ldr	r2, [pc, #40]	; (8000228 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000200:	4c0a      	ldr	r4, [pc, #40]	; (800022c <LoopForever+0x16>)
  movs r3, #0
 8000202:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000204:	e001      	b.n	800020a <LoopFillZerobss>

08000206 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000206:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000208:	3204      	adds	r2, #4

0800020a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800020a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800020c:	d3fb      	bcc.n	8000206 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800020e:	f000 f811 	bl	8000234 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000212:	f7ff ffe1 	bl	80001d8 <main>

08000216 <LoopForever>:

LoopForever:
    b LoopForever
 8000216:	e7fe      	b.n	8000216 <LoopForever>
  ldr   r0, =_estack
 8000218:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800021c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000220:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000224:	0800029c 	.word	0x0800029c
  ldr r2, =_sbss
 8000228:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800022c:	2000001c 	.word	0x2000001c

08000230 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000230:	e7fe      	b.n	8000230 <ADC_IRQHandler>
	...

08000234 <__libc_init_array>:
 8000234:	b570      	push	{r4, r5, r6, lr}
 8000236:	4d0d      	ldr	r5, [pc, #52]	; (800026c <__libc_init_array+0x38>)
 8000238:	4c0d      	ldr	r4, [pc, #52]	; (8000270 <__libc_init_array+0x3c>)
 800023a:	1b64      	subs	r4, r4, r5
 800023c:	10a4      	asrs	r4, r4, #2
 800023e:	2600      	movs	r6, #0
 8000240:	42a6      	cmp	r6, r4
 8000242:	d109      	bne.n	8000258 <__libc_init_array+0x24>
 8000244:	4d0b      	ldr	r5, [pc, #44]	; (8000274 <__libc_init_array+0x40>)
 8000246:	4c0c      	ldr	r4, [pc, #48]	; (8000278 <__libc_init_array+0x44>)
 8000248:	f000 f818 	bl	800027c <_init>
 800024c:	1b64      	subs	r4, r4, r5
 800024e:	10a4      	asrs	r4, r4, #2
 8000250:	2600      	movs	r6, #0
 8000252:	42a6      	cmp	r6, r4
 8000254:	d105      	bne.n	8000262 <__libc_init_array+0x2e>
 8000256:	bd70      	pop	{r4, r5, r6, pc}
 8000258:	f855 3b04 	ldr.w	r3, [r5], #4
 800025c:	4798      	blx	r3
 800025e:	3601      	adds	r6, #1
 8000260:	e7ee      	b.n	8000240 <__libc_init_array+0xc>
 8000262:	f855 3b04 	ldr.w	r3, [r5], #4
 8000266:	4798      	blx	r3
 8000268:	3601      	adds	r6, #1
 800026a:	e7f2      	b.n	8000252 <__libc_init_array+0x1e>
 800026c:	08000294 	.word	0x08000294
 8000270:	08000294 	.word	0x08000294
 8000274:	08000294 	.word	0x08000294
 8000278:	08000298 	.word	0x08000298

0800027c <_init>:
 800027c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800027e:	bf00      	nop
 8000280:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000282:	bc08      	pop	{r3}
 8000284:	469e      	mov	lr, r3
 8000286:	4770      	bx	lr

08000288 <_fini>:
 8000288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800028a:	bf00      	nop
 800028c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800028e:	bc08      	pop	{r3}
 8000290:	469e      	mov	lr, r3
 8000292:	4770      	bx	lr
