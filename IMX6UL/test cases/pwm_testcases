											PWM
										********************
Description:
****************
	PWM stands for Pulse Width Modulation, which is a technique used to control the amount of power delivered to a load by varying the width of the pulse of a periodic signal. The pulse width represents the amount of time during which the power is delivered to the load, and the period of the signal represents the time between consecutive pulses.
	To test the PWM functionality in Kernel with External LED.

prerequisite:
************

* Any Phytec Board with images
* PWM driver in kernel module
* External LED.

Test Case:
************

To test the PWM need to check weather PWM driver is loaded or not, then we can connect the pwm pin with ground to observe the brightness of the led.
Here are few commands to check polarity and set the period and duty_cycle.

1) To display the number of available PWM channels in the first PWM controller (pwmchip0) in the system.
		$ cat /sys/class/pwm/pwmchip0/npwm
2) To export the PWM channel with index 0 in the first PWM controller (pwmchip0) in the system.
		$ echo 0 > /sys/class/pwm/pwmchip0/export
3) To display the polarity of the PWM signal generated by PWM channel 0 in the first PWM controller (pwmchip0) in the system.
		$ cat /sys/class/pwm/pwmchip0/pwm0/polarity
4) To set the period of the PWM signal generated by PWM channel 0 in the first PWM controller (pwmchip0).
		$ echo <time-to-set-for-period> > /sys/class/pwm/pwmchip0/pwm0/period
5) To set the duty_cycle of the PWM signal generated by PWM channel 0 in the first PWM controller (pwmchip0).
		$ echo <time-to-set-for-duty_cycle> > /sys/class/pwm/pwmchip0/pwm0/duty_cycle
6) To enable the PWM signal generated by PWM channel 0 in the first PWM controller (pwmchip0).
		$ echo 1 > /sys/class/pwm/pwmchip0/pwm0/enable
7) To read the value of the "pwm" file in the "debug" directory under the "kernel" directory in the "sys" file system.
		$ cat /sys/kernel/debug/pwm
8) To disable the PWM (Pulse Width Modulation) output on the first PWM channel of the first PWM chip.
		$ echo 0 > /sys/class/pwm/pwmchip0/pwm0/enable

***************************************************************************************************************************************
Example:
***********
Description
***********
Required Hardware
    • RuggedBoard – i.MX6 UL
    • External LED
Here we have connected the PWM pin from Mikrobus 16th pin to the ground.


root@ruggedboard-imx6ul:~# cat /sys/class/pwm/pwmchip0/npwm
1
root@ruggedboard-imx6ul:~# echo 0 > /sys/class/pwm/pwmchip0/export
-sh: echo: write error: Device or resource busy
root@ruggedboard-imx6ul:~# cat /sys/class/pwm/pwmchip0/pwm0/polarity
normal
root@ruggedboard-imx6ul:~# echo 50000 > /sys/class/pwm/pwmchip0/pwm0/period
root@ruggedboard-imx6ul:~# echo 4000 > /sys/class/pwm/pwmchip0/pwm0/duty_cycle
root@ruggedboard-imx6ul:~#  echo 1 > /sys/class/pwm/pwmchip0/pwm0/enable 
root@ruggedboard-imx6ul:~# echo 0 > /sys/class/pwm/pwmchip0/pwm0/enable
root@ruggedboard-imx6ul:~# echo 1 > /sys/class/pwm/pwmchip0/pwm0/enable
root@ruggedboard-imx6ul:~# cat /sys/kernel/debug/pwm
platform/2088000.pwm, 1 PWM device
 pwm-0   (sysfs               ): requested enabled period: 50000 ns duty: 4000 ns polarity: normal
root@ruggedboard-imx6ul:~#

